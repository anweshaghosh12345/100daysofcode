https://practice.geeksforgeeks.org/problems/largest-subarray-of-0s-and-1s/1/?category[]=sliding-window&category[]=sliding-window&problemStatus=unsolved&page=1&query=category[]sliding-windowproblemStatusunsolvedpage1category[]sliding-window

int maxLen(int arr[], int N)
    {
        // Your code here
        unordered_map<int,int> mp;
        int sum=0,subarray=0;
        for(int i=0;i<N;i++)
        {
            if(arr[i]==0)
               sum+=-1;
            else
               sum+=1;
            if(sum==0)
            {
                if(subarray<i+1)
                   subarray=i+1;
            }
            else if(mp.find(sum)!=mp.end())
            {
                if(subarray<i-mp[sum])
                    subarray=i-mp[sum];
            }
            else
                mp[sum]=i;
        }
        return subarray;
        
    }
