https://practice.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/0/?track=dsa-workshop-1-trees&batchId=308#

int count(Node* root,int val,int level)
{
    if(root==NULL)
       return -1;
    if(root->data==val)
       return level;
    int d=count(root->left,val,level+1);
       if(d!=-1)
          return d;
    d=count(root->right,val,level+1);
        return d;
    }
Node* LCA(Node* root,int a,int b)
{
    if(root==NULL)
       return NULL;
    if(root->data==a||root->data==b)
       return root;
    Node* n1=LCA( root->left, a, b);
    Node* n2=LCA( root->right, a, b);
    if(n1!=NULL&&n2!=NULL)
       return root;
    if(n1!=NULL)
       return n1;
    if(n2!=NULL)
       return n2;
}
int findDist(Node* root, int a, int b)
{
    if(root==NULL)
       return 0;
    Node* node =LCA(root,a,b);
    int d1=count(node,a,0);
    int d2=count(node,b,0);
    return d1+d2;
    // Your code here
}
