https://practice.geeksforgeeks.org/problems/search-in-a-rotated-array0959/1/?track=dsa-workshop-1-search-sort&batchId=308

int Search(vector<int> a, int x) {
    //code here
    int n = a.size();
    int low = 0;
    int high = n-1;
    while(low <= high)
    {
        int mid = low+(high-low)/2;
        if(a[mid] == x)
            return mid;

        if(a[mid] <= a[high]) // If right part is sorted
        {
            if(x > a[mid] && x <= a[high])
                low = mid+1;
            else
                high = mid-1;
        }
        else
        {
            if(x >= a[low] and x < a[mid])
                high = mid-1;
            else
                low = mid+1;
        }
    }
return -1;
    
}

